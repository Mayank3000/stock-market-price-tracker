{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91993\\\\Desktop\\\\stock-market-tracker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport StockList from './components/StockList';\nimport StockChart from './components/StockChart';\nimport { getTrendingStocks, getStockData } from './services/api';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load trending stocks on initial render\n  useEffect(() => {\n    loadTrendingStocks();\n\n    // Set up auto-refresh every 60 seconds\n    const refreshTimer = setInterval(() => {\n      refreshStockData();\n    }, 60000);\n    return () => clearInterval(refreshTimer);\n  }, []);\n  const loadTrendingStocks = async () => {\n    try {\n      setLoading(true);\n      const data = await getTrendingStocks();\n      setStocks(data);\n\n      // Auto-select the first stock\n      if (data.length > 0 && !selectedStock) {\n        setSelectedStock(data[0]);\n      }\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to load trending stocks');\n      setLoading(false);\n      console.error(err);\n    }\n  };\n  const refreshStockData = async () => {\n    try {\n      // Refresh data for all displayed stocks\n      const updatedStocks = await Promise.all(stocks.map(async stock => {\n        const freshData = await getStockData(stock.symbol);\n        return {\n          ...stock,\n          ...freshData\n        };\n      }));\n      setStocks(updatedStocks);\n\n      // Update selected stock if any\n      if (selectedStock) {\n        const updatedSelected = updatedStocks.find(stock => stock.symbol === selectedStock.symbol);\n        if (updatedSelected) {\n          setSelectedStock(updatedSelected);\n        }\n      }\n    } catch (err) {\n      console.error('Error refreshing stock data:', err);\n    }\n  };\n  const handleStockSelect = stock => {\n    setSelectedStock(stock);\n  };\n  const handleStockAdd = newStock => {\n    // Check if stock already exists in the list\n    if (!stocks.some(stock => stock.symbol === newStock.symbol)) {\n      setStocks(prevStocks => [...prevStocks, newStock]);\n    }\n    setSelectedStock(newStock);\n  };\n  const handleRemoveStock = symbolToRemove => {\n    const updatedStocks = stocks.filter(stock => stock.symbol !== symbolToRemove);\n    setStocks(updatedStocks);\n\n    // If we're removing the currently selected stock, select another one\n    if (selectedStock && selectedStock.symbol === symbolToRemove) {\n      setSelectedStock(updatedStocks.length > 0 ? updatedStocks[0] : null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onStockAdd: handleStockAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading stocks...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(StockList, {\n          stocks: stocks,\n          selectedStock: selectedStock,\n          onStockSelect: handleStockSelect,\n          onStockRemove: handleRemoveStock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: selectedStock ? /*#__PURE__*/_jsxDEV(StockChart, {\n          stock: selectedStock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-selection\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a stock to view details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aGsXWQ9MZG2kezqJAjPlwkpv77E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","SearchBar","StockList","StockChart","getTrendingStocks","getStockData","jsxDEV","_jsxDEV","App","_s","stocks","setStocks","selectedStock","setSelectedStock","loading","setLoading","error","setError","loadTrendingStocks","refreshTimer","setInterval","refreshStockData","clearInterval","data","length","err","console","updatedStocks","Promise","all","map","stock","freshData","symbol","updatedSelected","find","handleStockSelect","handleStockAdd","newStock","some","prevStocks","handleRemoveStock","symbolToRemove","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStockAdd","onStockSelect","onStockRemove","_c","$RefreshReg$"],"sources":["C:/Users/91993/Desktop/stock-market-tracker/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header';\r\nimport SearchBar from './components/SearchBar';\r\nimport StockList from './components/StockList';\r\nimport StockChart from './components/StockChart';\r\nimport { getTrendingStocks, getStockData } from './services/api';\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [selectedStock, setSelectedStock] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load trending stocks on initial render\r\n  useEffect(() => {\r\n    loadTrendingStocks();\r\n    \r\n    // Set up auto-refresh every 60 seconds\r\n    const refreshTimer = setInterval(() => {\r\n      refreshStockData();\r\n    }, 60000);\r\n    \r\n    return () => clearInterval(refreshTimer);\r\n  }, []);\r\n\r\n  const loadTrendingStocks = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await getTrendingStocks();\r\n      setStocks(data);\r\n      \r\n      // Auto-select the first stock\r\n      if (data.length > 0 && !selectedStock) {\r\n        setSelectedStock(data[0]);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to load trending stocks');\r\n      setLoading(false);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const refreshStockData = async () => {\r\n    try {\r\n      // Refresh data for all displayed stocks\r\n      const updatedStocks = await Promise.all(\r\n        stocks.map(async (stock) => {\r\n          const freshData = await getStockData(stock.symbol);\r\n          return { ...stock, ...freshData };\r\n        })\r\n      );\r\n      \r\n      setStocks(updatedStocks);\r\n      \r\n      // Update selected stock if any\r\n      if (selectedStock) {\r\n        const updatedSelected = updatedStocks.find(\r\n          (stock) => stock.symbol === selectedStock.symbol\r\n        );\r\n        if (updatedSelected) {\r\n          setSelectedStock(updatedSelected);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error refreshing stock data:', err);\r\n    }\r\n  };\r\n\r\n  const handleStockSelect = (stock) => {\r\n    setSelectedStock(stock);\r\n  };\r\n\r\n  const handleStockAdd = (newStock) => {\r\n    // Check if stock already exists in the list\r\n    if (!stocks.some(stock => stock.symbol === newStock.symbol)) {\r\n      setStocks(prevStocks => [...prevStocks, newStock]);\r\n    }\r\n    setSelectedStock(newStock);\r\n  };\r\n\r\n  const handleRemoveStock = (symbolToRemove) => {\r\n    const updatedStocks = stocks.filter(stock => stock.symbol !== symbolToRemove);\r\n    setStocks(updatedStocks);\r\n    \r\n    // If we're removing the currently selected stock, select another one\r\n    if (selectedStock && selectedStock.symbol === symbolToRemove) {\r\n      setSelectedStock(updatedStocks.length > 0 ? updatedStocks[0] : null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <main className=\"main-content\">\r\n        <div className=\"sidebar\">\r\n          <SearchBar onStockAdd={handleStockAdd} />\r\n          {loading ? (\r\n            <div className=\"loading\">Loading stocks...</div>\r\n          ) : error ? (\r\n            <div className=\"error\">{error}</div>\r\n          ) : (\r\n            <StockList \r\n              stocks={stocks}\r\n              selectedStock={selectedStock}\r\n              onStockSelect={handleStockSelect}\r\n              onStockRemove={handleRemoveStock}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"chart-container\">\r\n          {selectedStock ? (\r\n            <StockChart stock={selectedStock} />\r\n          ) : (\r\n            <div className=\"no-selection\">\r\n              <p>Select a stock to view details</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}